package it.laziocrea.jemoloapp.domain;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import javax.persistence.*;
import javax.validation.constraints.*;

import java.io.Serializable;
import java.time.Instant;
import java.util.HashSet;
import java.util.Set;

/**
 * Entity Curriculum\n@author Marco Tassinari
 */
@Entity
@Table(name = "curriculum")
public class Curriculum extends AbstractAuditingEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "curriculum_id_seq")
    @SequenceGenerator(name = "curriculum_id_seq",initialValue = 1, allocationSize = 1)
    private Long id;

    @NotNull
    @Column(name = "cv", nullable = false)
    private String cv;
    
    @NotNull
    @Column(name = "size", nullable = false)
    private Long size;

    @NotNull
    @Column(name = "url_allegato", nullable = false)
    private String urlAllegato;

    @Column(name = "mime_type")
    private String mimeType;

    @Column(name = "note")
    private String note;
    
    // @OneToOne(optional = false)
    @OneToOne(optional = false, cascade = CascadeType.ALL,fetch = FetchType.LAZY,orphanRemoval=true)
    @NotNull
    @JoinColumn(unique = true)
    @JsonIgnore
    private Allegato allegato;

    @ManyToOne(optional = false)
    @NotNull
    @JsonIgnoreProperties({"dichiarazionis","titoloStudios","competenzas","competenzeLngs","curricula"})
    @JsonIgnore
    private AnagraficaCandidato anagrafica;
    
    @OneToMany(mappedBy = "curriculum",cascade = CascadeType.ALL)
    private Set<CurriculumFile> curriculumfiles = new HashSet<>();
    
    // jhipster-needle-entity-add-field - JHipster will add fields here, do not remove
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCv() {
        return cv;
    }

    public Curriculum cv(String cv) {
        this.cv = cv;
        return this;
    }

    public void setCv(String cv) {
        this.cv = cv;
    }

    public String getNote() {
        return note;
    }

	public Curriculum note(String note) {
        this.note = note;
        return this;
    }

    public void setNote(String note) {
        this.note = note;
    }

    public AnagraficaCandidato getAnagrafica() {
        return anagrafica;
    }

    public Curriculum anagrafica(AnagraficaCandidato anagraficaCandidato) {
        this.anagrafica = anagraficaCandidato;
        return this;
    }

    public void setAnagrafica(AnagraficaCandidato anagraficaCandidato) {
        this.anagrafica = anagraficaCandidato;
    }

    public Long getSize() {
		return size;
	}

    public Curriculum size(Long size) {
        this.size = size;
        return this;
    }

	public void setSize(Long size) {
		this.size = size;
	}

    public String getUrlAllegato() {
        return urlAllegato;
    }

    public Curriculum urlAllegato(String urlAllegato) {
        this.urlAllegato = urlAllegato;
        return this;
    }

    public void setUrlAllegato(String urlAllegato) {
        this.urlAllegato = urlAllegato;
    }

	public String getMimeType() {
		return mimeType;
	}

	public void setMimeType(String mimeType) {
		this.mimeType = mimeType;
	}

    public Curriculum mimeType(String mimeType) {
        this.mimeType = mimeType;
        return this;
    }

	public Allegato getAllegato() {
		return allegato;
	}

    public Curriculum allegato(Allegato allegato) {
        this.allegato = allegato;
        return this;
    }

	public void setAllegato(Allegato allegato) {
		this.allegato = allegato;
	}

	public Set<CurriculumFile> getCurriculumfiles() {
		return curriculumfiles;
	}

	public void setCurriculumfiles(Set<CurriculumFile> curriculumfiles) {
		this.curriculumfiles = curriculumfiles;
	}
	
	public Curriculum curriculumfiles(Set<CurriculumFile> curriculumfiles) {
		this.curriculumfiles = curriculumfiles;
		return this;
	}
	
	public Curriculum addCurriculumfile(CurriculumFile curriculumfile) {
		this.curriculumfiles.add(curriculumfile);
		curriculumfile.setCurriculum(this);
		return this;
	}
	
	public void addAllegato(byte[] data) {
	    Allegato allegato = new Allegato();
	    allegato.setData(data);
	    allegato.setDataContentType("not-used"); // the field is generated by JHipster but redundant in our case, we can delete it later
	    this.allegato = allegato;
	}
	
	public byte[] retrieveAllegato(){
	    return allegato.getData();
	}    
	// jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here, do not remove

	@Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof Curriculum)) {
            return false;
        }
        return id != null && id.equals(((Curriculum) o).id);
    }

    @Override
    public int hashCode() {
        return 31;
    }

    @Override
    public String toString() {
        return "Curriculum{" +
            "id=" + getId() +
            ", cv='" + getCv() + "'" +
            ", size=" + getSize() +
            ", urlAllegato='" + getUrlAllegato() + "'" +
            ", mimeType='" + getMimeType() + "'" +
            ", note='" + getNote() + "'" +
            "}";
    }
}
